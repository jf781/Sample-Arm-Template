{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Name."
      }
    },
    "virtualNetworkAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Address Space."
      }
    },
    "webFrontEndSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of web front end subnet."
      }
    },
    "webFrontEndSubnetAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Web front end subnet address space."
      }
    },
    "appServerSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of app server subnet."
      }
    },
    "appServerSubnetAddresSpace": {
      "type": "string",
      "metadata": {
        "description": "App Server subnet address space."
      }
    },
    "dbServerSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of database servers subnet."
      }
    },
    "dbServerSubnetAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "Database servers subnet address space."
      }
    },
    "primaryDNSAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the primary DNS Server"
      },
      "defaultValue": "10.0.0.4"
    },
    "secondaryDNSAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the secondary DNS Server"
      },
      "defaultValue": "10.0.0.4"
    },
    "sqlDBServerBaseName": {
      "type": "string",
      "metadata": {
        "description": "The name prefix for the name of the SQL DB servers"
      }
    },
    "sqlFileWitnessName": {
      "type": "string",
      "metadata": {
        "description": "The name prefix for the name of the SQL DB servers"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_DS4"
    },
    "witnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the Witness VM Created"
      },
      "defaultValue": "Standard_DS1"
    },
    "diagStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of Diagnostic Storage Account"
      }
    },
    "diagStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Premium_GRS",
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "The type of the Sql Server Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new SQL Server Internal Load Balancer"
      },
      "defaultValue": "10.0.1.9"
    },
    "templatesBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "Linked Templates base url"
      },
      "defaultValue": "https://raw.githubusercontent.com/jf781/Sample-Arm-Template/master/sql-aoag/nested/"
    },
    "scriptsBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "DSC Scripts base url"
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sqlvm-alwayson-cluster/scripts"
    },

    "sqlServerVersion": {
      "type": "string",
      "allowedValues": [
        "SQL2012SP3-WS2012R2",
        "SQL2014SP1-WS2012R2",
        "SQL2016-WS2012R2",
        "sql2019-ws2019"
      ],
      "metadata": {
        "description": "The Sql Server Version"
      },
      "defaultValue": "SQL2014SP1-WS2012R2"
    }
  },
  "variables": {
    "nsgNames": {
      "webFrontEnd": "[concat(parameters('webFrontEndSubnetName'), '-nsg')]",
      "appServer": "[concat(parameters('appServerSubnetName'), '-nsg')]",
      "dbServer": "[concat(parameters('dbServerSubnetName'), '-nsg')]"
    },
    "webFrontEndSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'),parameters('webFrontEndSubnetName'))]",
    "appServerSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'),parameters('appServerSubnetName'))]",
    "dbSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'),parameters('dbServerSubnetName'))]",
    "lbSettings": {
      "sqlLBFE": "sqlLBFE",
      "sqlLBBE": "sqlLBBE",
      "sqlLBName": "sqlLoadBalancer"
    },
    "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
    "vmSettings": {
      "availabilitySets": {
        "sqlAvailabilitySetName": "sqlAvailabilitySet"
      },
      "noOfSqlVMs": 2,
      "sqlVMName": "[parameters('sqlDBServerBaseName')]",
      "sqlwVMName": "[parameters('sqlFileWitnessName')]",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2019-Datacenter",
      "sqlImagePublisher": "MicrosoftSQLServer",
      "sqlImageOffer": "[parameters('sqlServerVersion')]",
      "rdpPort": 3389,
      "windowsDiskSize": 128,
      "sqlDiskSize": 1000
    },
    "sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",
    "ids": {
      "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]"
    },
    "derivedIds": {
      "sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
      "sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
      "sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]"
    },
    "SQL2012SP2-WS2012R2": "Enterprise",
    "SQL2012SP3-WS2012R2": "Enterprise",
    "SQL2014-WS2012R2": "Enterprise",
    "SQL2014SP1-WS2012R2": "Enterprise",
    "SQL2016-WS2012R2": "Enterprise",
    "sql2019-ws2019": "Enterprise",
    "configuration": {
      // "vnetwithDNSTemplateURL": "[concat(parameters('templatesBaseUrl'),'/vnet-with-dns-server.json')]",
      "nicTemplateURL": "[concat(parameters('templatesBaseUrl'),'/nic.json')]",
      // "rdpIPAdressSetupURL": "[concat(parameters('templatesBaseUrl'),'/publicip-rdp.json')]",
      "vnetURL": "[concat(parameters('templatesBaseUrl'),'/vnet.json')]",
      "setupLBsUrl": "[concat(parameters('templatesBaseUrl'),'/setupLBs.json')]",
      "creatingNicsUrl": "[concat(parameters('templatesBaseUrl'),'/creatingNICS.json')]",
      "storageAccount": "[concat(parameters('templatesBaseUrl'),'/storageAccount.json')]",
      "provisioningDBVMs": "[concat(parameters('templatesBaseUrl'),'/provisioningDBVMs.json')]",
      "provisioningVMs": "[concat(parameters('templatesBaseUrl'),'/creatingNICS.json')]",
      "provisioningSQLVMs": "[concat(parameters('templatesBaseUrl'),'/creatingNICS.json')]",
      // "configuringBackupADVM": "[concat(parameters('templatesBaseUrl'),'/configuringBackupADVM.json')]",
      // "preparingAlwaysOnSqlServer": "[concat(parameters('templatesBaseUrl'),'/preparingSqlServer.json')]",
      // "configuringAlwaysOn": "[concat(parameters('templatesBaseUrl'),'/configuringAlwaysOn.json')]",
      // "adPDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADPDC.ps1.zip')]",
      // "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
      // "adBDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADBDC.ps1.zip')]",
      // "adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC",
      // "fswModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFileShareWitness.ps1.zip')]",
      // "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
      // "sqlAOPrepareModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
      // "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
      // "createClusterModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFailoverCluster.ps1.zip')]",
      // "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "vnetTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "childTemplates/vnet.json"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressSpace": {
            "value": "[parameters('virtualNetworkAddressSpace')]"
          },
          "webFrontEndSubnetName": {
            "value": "[parameters('webFrontEndSubnetName')]"
          },
          "webFrontEndSubnetAddressPrefix": {
            "value": "[parameters('webFrontEndSubnetAddressPrefix')]"
          },
          "appServerSubnetName": {
            "value": "[parameters('appServerSubnetName')]"
          },
          "appServerSubnetAddresSpace": {
            "value": "[parameters('appServerSubnetAddresSpace')]"
          },
          "dbServerSubnetName": {
            "value": "[parameters('dbServerSubnetName')]"
          },
          "dbServerSubnetAddressSpace": {
            "value": "[parameters('dbServerSubnetAddressSpace')]"
          },
          "webFrontEndNsgName": {
            "value": "[variables('nsgNames').webFrontEnd]"
          },
          "appServerNsgName": {
            "value": "[variables('nsgNames').appServer]"
          },
          "dbServerNsgName": {
            "value": "[variables('nsgNames').dbServer]"
          }
        },
        "outputs": {
        }
      }
    }
  ],
  "outputs": {}
}
