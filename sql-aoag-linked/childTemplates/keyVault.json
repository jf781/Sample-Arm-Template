{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "keyVaultSku": {
      "type": "string"
    }
    "enabledForDeployment": {
      "type": "bool"
    },
    "enabledForDiskEncryption": {
      "type": "bool"
    },
    "enabledForTemplateDeployment": {
      "type": "bool"
    },
    "enabledRBACAuthorization": {
      "type": "bool"
    }
  },
  "variables": {
    "keyVaultName": "[concat(parameters('appName'), '-keyVault')]"
  },
  "resources": [
    {
      "name": "[variables('keyVaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "[parameters('keyVaultSku')]"
        },
        // "accessPolicies": [
        //   {
        //     "tenantId": "[subscription().tenantId]",
        //     "objectId": "string",
        //     "applicationId": "string",
        //     "permissions": {
        //       "keys": [
        //         "string"
        //       ],
        //       "secrets": [
        //         "string"
        //       ],
        //       "certificates": [
        //         "string"
        //       ],
        //       "storage": [
        //         "string"
        //       ]
        //     }
        //   }
        // ],
        "vaultUri": "string",
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enableSoftDelete": "true",
        // "softDeleteRetentionInDays": "integer",
        "enableRbacAuthorization": "[parameters('enabledRBACAuthorization')]",
        "createMode": "default",
        "enablePurgeProtection": "true",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "deny",
          "ipRules": [
            {
              "value": "string"
            }
          ],
          "virtualNetworkRules": [
            {
              "id": "string"
            }
          ]
        }
      }
    }
  ],
  "outputs": {} 
}
