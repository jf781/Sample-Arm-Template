{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appGatewayName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "managedIdResourceId": {
      "type": "string"
    },
    "appName": {
      "type": "string"
    },
    "appGwIndexStart": {
      "type": "int"
    },
    "urlPrefix1": {
      "type": "string"
    },
    "urlPrefix2": {
      "type": "string"
    },
    "appGatewayAutoScaleMinValue": {
      "type": "int"
    },
    "appGatewayAutoScaleMaxValue": {
      "type": "int"
    },
    "appGatewaySubnetRef": {
      "type": "string"
    },
    "appGatewaySSLCertificateData": {
      "type": "string"
    },
    "webAppFirewallName": {
      "type": "string"
    },
    "webAppFirewallMode": {
      "type": "string"
    },
    "webAppFirewallRuleSet": {
      "type": "string"
    },
    "urlPrefix1AppBackendPoolAddress": {
      "type": "string"
    },
    "urlPrefix1AppBackendPoolAddresses": {
      "type": "array"
    },
    "urlPrefix2AppBackendPoolAddress": {
      "type": "string"
    },
    "urlPrefix2AppBackendPoolAddresses": {
      "type": "array"
    },
    "wfeServerVMCount": {
      "type": "int"
    },
    "tags": {
      "type": "object"
    }
  },
  "variables": {
    "publicIpAddressName": "[concat(parameters('appGatewayName'), parameters('appGwIndexStart'), '-pip')]",
    "publicIpAddressSku": "Standard",
    "publicIpAddressAllocationType": "Static",
    "publicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]",
    "appGatewaySkuSize": "WAF_v2",
    "appGatewayTier": "WAF_v2",
    "appGwIpConfigName": "[concat(parameters('appName'), 'IpConfigName')]",
    "appGwFrontendPortNameHttp": "[concat(parameters('appName'), 'FrontendPort')]",
    "appGwFrontendPortNameHttps": "[concat(parameters('appName'), 'FrontendPortHttps')]",
    "appGwFrontendPortHttp": 80,
    "appGwFrontendPortHttps": 443,
    "appGwFrontendPortIdHttp": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/', parameters('appGatewayName'), variables('appGwFrontendPortNameHttp'))]",
    "appGwFrontendPortIdHttps": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/', parameters('appGatewayName'), variables('appGwFrontendPortNameHttps'))]",
    "appGwFrontendIpConfigName": "[concat(parameters('appName'), 'PublicFrontendIpConfig')]",
    "appGwFrontendIpConfigId": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations/', parameters('appGatewayName'), variables('appGwFrontendIpConfigName'))]",
    "appGwHttpSettingName": "[concat(parameters('appName'), 'HttpSetting')]",
    "appGwHttpSettingId": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection/', parameters('appGatewayName'), variables('appGwHttpSettingName'))]",
    "appGwHttpSettingProbeName": "[concat(parameters('appName'), 'HttpSettingProbe')]",
    "appGwBackendAddressPool1Name": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix1'), '.')), 'BackendPool')]",
    "appGwBackendAddressPool2Name": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix2'), '.')), 'BackendPool')]",
    "appGwBackendAddressPool1Id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/', parameters('appGatewayName'), variables('appGwBackendAddressPool1Name'))]",
    "appGwBackendAddressPool2Id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/', parameters('appGatewayName'), variables('appGwBackendAddressPool2Name'))]",
    "appGwBackendAffinityCookieName": "[concat(parameters('appName'), 'SessionAffinityCookie')]",
    "appGwListener1Name": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix1'), '.')), 'Listener')]",
    "appGwListener2Name": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix2'), '.')), 'Listener')]",
    "appGwListener1IdHttp": "[concat(resourceId('Microsoft.Network/applicationGateways/', parameters('appGatewayName')), concat('/httpListeners/', variables('appGwListener1Name'), '-http'))]",
    "appGwListener1IdHttps": "[concat(resourceId('Microsoft.Network/applicationGateways/', parameters('appGatewayName')), concat('/httpListeners/', variables('appGwListener1Name'), '-https'))]",
    "appGwListener2IdHttp": "[concat(resourceId('Microsoft.Network/applicationGateways/', parameters('appGatewayName')), concat('/httpListeners/', variables('appGwListener2Name'), '-http'))]",
    "appGwListener2IdHttps": "[concat(resourceId('Microsoft.Network/applicationGateways/', parameters('appGatewayName')), concat('/httpListeners/', variables('appGwListener2Name'), '-https'))]",
    "appGwRoutingRule1NameHttp": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix1'), '.')),'HttpToHttps')]",
    "appGwRoutingRule1NameHttps": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix1'), '.')),'Https')]",
    "appGwRoutingRule2NameHttp": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix2'), '.')),'HttpToHttps')]",
    "appGwRoutingRule2NameHttps": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix2'), '.')),'Https')]",
    "appGwRedirection1Name": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix1'), '.')), 'RedirectHttpToHttps')]",
    "appGwRedirection2Name": "[concat(parameters('appName'), '-', first(split(parameters('urlPrefix2'), '.')), 'RedirectHttpToHttps')]"

  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-08-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[variables('publicIpAddressSku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIpAddressAllocationType')]",
        "dnsSettings": {
          "domainNameLabel": "[toLower(parameters('appName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
      "apiVersion": "2020-06-01",
      "name": "[parameters('webAppFirewallName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "customRules": [
        ],
        "policySettings": {
          "requestBodyCheck": true,
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100,
          "state": "Enabled",
          "mode": "[parameters('webAppFirewallMode')]"
        },
        "managedRules": {
          "managedRuleSets": [
            {
              "ruleSetType": "OWASP",
              "ruleSetVersion": "[parameters('webAppFirewallRuleSet')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "condition": "[greater(parameters('wfeServerVMCount'), 1)]",
      "apiVersion": "2020-11-01",
      "name": "[if(greater(parameters('wfeServerVMCount'), 1), concat(parameters('appGatewayName'), parameters('appGwIndexStart')), 'invalidAppGWNames')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('managedIdResourceId')]": {
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]",
        "[concat('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/', parameters('webAppFirewallName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[variables('appGatewaySkuSize')]",
          "tier": "[variables('appGatewayTier')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "[variables('appGwIpConfigName')]",
            "properties": {
              "subnet": {
                "id": "[parameters('appGatewaySubnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('appGwFrontendIpConfigName')]",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIpAddressId')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "[variables('appGwFrontendPortNameHttp')]",
            "properties": {
              "Port": "[variables('appGwFrontendPortHttp')]"
            }
          },
          {
            "name": "[variables('appGwFrontendPortNameHttps')]",
            "properties": {
              "Port": "[variables('appGwFrontendPortHttps')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appGwBackendAddressPool1Name')]",
            "properties": {
              "copy": [
                {
                  "name": "backendAddresses",
                  "count": "[length(parameters('urlPrefix1AppBackendPoolAddresses'))]",
                  "input": {
                    "ipAddress": "[parameters('urlPrefix1AppBackendPoolAddresses')[copyIndex('backendAddresses')]]"
                  }
                }
              ]
            }
          },
          {
            "name": "[variables('appGwBackendAddressPool2Name')]",
            "properties": {
              "copy": [
                {
                  "name": "backendAddresses",
                  "count": "[length(parameters('urlPrefix2AppBackendPoolAddresses'))]",
                  "input": {
                    "ipAddress": "[parameters('urlPrefix2AppBackendPoolAddresses')[copyIndex('backendAddresses')]]"
                  }
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "[variables('appGwHttpSettingName')]",
            "properties": {
              "Port": 443,
              "Protocol": "Https",
              "cookieBasedAffinity": "Enabled",
              "affinityCookieName": "[variables('appGwBackendAffinityCookieName')]",
              "connectionDraining": {
                "enabled": true,
                "drainTimeoutInSec": 180
              },
              "requestTimeout": 20,
              "pickHostNameFromBackendAddress": true,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), concat('/probes/', variables('appGwHttpSettingProbeName')))]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "[concat(variables('appGwListener1Name'), '-http')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appGwFrontendIpConfigId')]"
              },
              "frontendPort": {
                "id": "[variables('appGwFrontendPortIdHttp')]"
              },
              "protocol": "Http",
              "hostName": "[parameters('urlPrefix1')]"
            }
          },
          {
            "name": "[concat(variables('appGwListener1Name'), '-https')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appGwFrontendIpConfigId')]"
              },
              "frontendPort": {
                "id": "[variables('appGwFrontendPortIdHttps')]"
              },
              "sslCertificate": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/sslCertificates/appGwSslCertificate')]"
              },
              "protocol": "Https",
              "hostName": "[parameters('urlPrefix1')]"
            }
          },
          {
            "name": "[concat(variables('appGwListener2Name'), '-http')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appGwFrontendIpConfigId')]"
              },
              "frontendPort": {
                "id": "[variables('appGwFrontendPortIdHttp')]"
              },
              "protocol": "Http",
              "hostName": "[parameters('urlPrefix2')]"
            }
          },
          {
            "name": "[concat(variables('appGwListener2Name'), '-https')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appGwFrontendIpConfigId')]"
              },
              "frontendPort": {
                "id": "[variables('appGwFrontendPortIdHttps')]"
              },
              "sslCertificate": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/sslCertificates/appGwSslCertificate')]"
              },
              "protocol": "Https",
              "hostName": "[parameters('urlPrefix2')]"
            }
          }
        ],
        "sslCertificates": [
          {
            "name": "appGwSslCertificate",
            "properties": {
              "data": "[parameters('appGatewaySSLCertificateData')]"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "[variables('appGwRoutingRule1NameHttps')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[variables('appGwListener1IdHttps')]"
              },
              "backendAddressPool": {
                "id": "[variables('appGwBackendAddressPool1Id')]"
              },
              "backendHttpSettings": {
                "id": "[variables('appGwHttpSettingId')]"
              }
            }
          },
          {
            "Name": "[variables('appGwRoutingRule1NameHttp')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[variables('appGwListener1IdHttp')]"
              },
              "redirectConfiguration":{
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), concat('/redirectConfigurations/', variables('appGwRedirection1Name')))]"
              }
            }
          },
          {
            "Name": "[variables('appGwRoutingRule2NameHttps')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[variables('appGwListener2IdHttps')]"
              },
              "backendAddressPool": {
                "id": "[variables('appGwBackendAddressPool2Id')]"
              },
              "backendHttpSettings": {
                "id": "[variables('appGwHttpSettingId')]"
              }
            }
          },
          {
            "Name": "[variables('appGwRoutingRule2NameHttp')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[variables('appGwListener2IdHttp')]"
              },
              "redirectConfiguration":{
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), concat('/redirectConfigurations/', variables('appGwRedirection2Name')))]"
              }
            }
          }
        ],
        "redirectConfigurations": [
          {
            "name": "[variables('appGwRedirection1Name')]",
            "properties": {
              "redirectType": "Permanent",
              "targetListener": {
                "id": "[variables('appGwListener1IdHttps')]"
              },
              "includePath": true,
              "includeQueryString": true,
              "requestRoutingRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/requestRoutingRules/', variables('appGwRoutingRule1NameHttp'))]"
                }
              ]
            }
          },
          {
            "name": "[variables('appGwRedirection2Name')]",
            "properties": {
              "redirectType": "Permanent",
              "targetListener": {
                "id": "[variables('appGwListener2IdHttps')]"
              },
              "includePath": true,
              "includeQueryString": true,
              "requestRoutingRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/requestRoutingRules/', variables('appGwRoutingRule2NameHttp'))]"
                }
              ]
            }
          }
        ],
        "enableHttp2": true,
        "probes": [
          {
            "name": "[variables('appGwHttpSettingProbeName')]",
            "properties": {
              "backendHttpSettings": [
                {
                  "id": "[variables('appGwHttpSettingId')]"
                }
              ],
              "interval": 30,
              "minServers": 0,
              "path": "/",
              "protocol": "Https",
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": false,
              "host": "[parameters('urlPrefix1')]",
              "match": {
                "statusCodes": [
                  "200-399"
                ]
              }
            }
          }
        ],
        "autoscaleConfiguration": {
          "minCapacity": "[parameters('appGatewayAutoScaleMinValue')]",
          "maxCapacity": "[parameters('appGatewayAutoScaleMaxValue')]"
        },
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/', parameters('webAppFirewallName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "condition": "[equals(parameters('wfeServerVMCount'), 1)]",
      "apiVersion": "2020-11-01",
      "name": "[if(equals(parameters('wfeServerVMCount'), 1), concat(parameters('appGatewayName'), parameters('appGwIndexStart')), 'invalidAppGWName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('managedIdResourceId')]": {
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]",
        "[concat('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/', parameters('webAppFirewallName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[variables('appGatewaySkuSize')]",
          "tier": "[variables('appGatewayTier')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "[variables('appGwIpConfigName')]",
            "properties": {
              "subnet": {
                "id": "[parameters('appGatewaySubnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('appGwFrontendIpConfigName')]",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIpAddressId')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "[variables('appGwFrontendPortNameHttp')]",
            "properties": {
              "Port": "[variables('appGwFrontendPortHttp')]"
            }
          },
          {
            "name": "[variables('appGwFrontendPortNameHttps')]",
            "properties": {
              "Port": "[variables('appGwFrontendPortHttps')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appGwBackendAddressPool1Name')]",
            "properties": {
              "backendAddresses":[
                {
                  "ipAddress": "[parameters('urlPrefix1AppBackendPoolAddress')]"
                }
              ]
            }
          },
          {
            "name": "[variables('appGwBackendAddressPool2Name')]",
            "properties": {
              "backendAddresses":[
                {
                  "ipAddress": "[parameters('urlPrefix2AppBackendPoolAddress')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "[variables('appGwHttpSettingName')]",
            "properties": {
              "Port": 443,
              "Protocol": "Https",
             "cookieBasedAffinity": "Enabled",
              "affinityCookieName": "[variables('appGwBackendAffinityCookieName')]",
              "connectionDraining": {
                "enabled": true,
                "drainTimeoutInSec": 180
              },
              "requestTimeout": 20,
              "pickHostNameFromBackendAddress": false,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), concat('/probes/', variables('appGwHttpSettingProbeName')))]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "[concat(variables('appGwListener1Name'), '-http')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appGwFrontendIpConfigId')]"
              },
              "frontendPort": {
                "id": "[variables('appGwFrontendPortIdHttp')]"
              },
              "protocol": "Http",
              "hostName": "[parameters('urlPrefix1')]"
            }
          },
          {
            "name": "[concat(variables('appGwListener1Name'), '-https')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appGwFrontendIpConfigId')]"
              },
              "frontendPort": {
                "id": "[variables('appGwFrontendPortIdHttps')]"
              },
              "sslCertificate": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/sslCertificates/appGwSslCertificate')]"
              },
              "protocol": "Https",
              "hostName": "[parameters('urlPrefix1')]"
            }
          },
          {
            "name": "[concat(variables('appGwListener2Name'), '-http')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appGwFrontendIpConfigId')]"
              },
              "frontendPort": {
                "id": "[variables('appGwFrontendPortIdHttp')]"
              },
              "protocol": "Http",
              "hostName": "[parameters('urlPrefix2')]"
            }
          },
          {
            "name": "[concat(variables('appGwListener2Name'), '-https')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appGwFrontendIpConfigId')]"
              },
              "frontendPort": {
                "id": "[variables('appGwFrontendPortIdHttps')]"
              },
              "sslCertificate": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/sslCertificates/appGwSslCertificate')]"
              },
              "protocol": "Https",
              "hostName": "[parameters('urlPrefix2')]"
            }
          }
        ],
        "sslCertificates": [
          {
            "name": "appGwSslCertificate",
            "properties": {
              "data": "[parameters('appGatewaySSLCertificateData')]"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "[variables('appGwRoutingRule1NameHttps')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[variables('appGwListener1IdHttps')]"
              },
              "backendAddressPool": {
                "id": "[variables('appGwBackendAddressPool1Id')]"
              },
              "backendHttpSettings": {
                "id": "[variables('appGwHttpSettingId')]"
              }
            }
          },
          {
            "Name": "[variables('appGwRoutingRule1NameHttp')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[variables('appGwListener1IdHttp')]"
              },
              "redirectConfiguration":{
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), concat('/redirectConfigurations/', variables('appGwRedirection1Name')))]"
              }
            }
          },
          {
            "Name": "[variables('appGwRoutingRule2NameHttps')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[variables('appGwListener2IdHttps')]"
              },
              "backendAddressPool": {
                "id": "[variables('appGwBackendAddressPool2Id')]"
              },
              "backendHttpSettings": {
                "id": "[variables('appGwHttpSettingId')]"
              }
            }
          },
          {
            "Name": "[variables('appGwRoutingRule2NameHttp')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[variables('appGwListener2IdHttp')]"
              },
              "redirectConfiguration":{
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), concat('/redirectConfigurations/', variables('appGwRedirection2Name')))]"
              }
            }
          }
        ],
        "redirectConfigurations": [
          {
            "name": "[variables('appGwRedirection1Name')]",
            "properties": {
              "redirectType": "Permanent",
              "targetListener": {
                "id": "[variables('appGwListener1IdHttps')]"
              },
              "includePath": true,
              "includeQueryString": true,
              "requestRoutingRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/requestRoutingRules/', variables('appGwRoutingRule1NameHttp'))]"
                }
              ]
            }
          },
          {
            "name": "[variables('appGwRedirection2Name')]",
            "properties": {
              "redirectType": "Permanent",
              "targetListener": {
                "id": "[variables('appGwListener2IdHttps')]"
              },
              "includePath": true,
              "includeQueryString": true,
              "requestRoutingRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/requestRoutingRules/', variables('appGwRoutingRule2NameHttp'))]"
                }
              ]
            }
          }
        ],
        "enableHttp2": true,
        "probes": [
          {
            "name": "[variables('appGwHttpSettingProbeName')]",
            "properties": {
              "backendHttpSettings": [
                {
                  "id": "[variables('appGwHttpSettingId')]"
                }
              ],
              "interval": 30,
              "minServers": 0,
              "path": "/",
              "protocol": "Https",
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": false,
              "host": "[parameters('urlPrefix1')]",
              "match": {
                "statusCodes": [
                  "200-399"
                ]
              }
            }
          }
        ],
        "autoscaleConfiguration": {
          "minCapacity": "[parameters('appGatewayAutoScaleMinValue')]",
          "maxCapacity": "[parameters('appGatewayAutoScaleMaxValue')]"
        },
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/', parameters('webAppFirewallName'))]"
        }
      }
    }
  ],
  "outputs": {
    "appGatewayUrl": {
      "type": "string",
      "value": "[reference(variables('publicIpAddressName')).dnsSettings.fqdn]"
    }
  }
}